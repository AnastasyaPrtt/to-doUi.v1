"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/store/taskStore.ts":
/*!********************************!*\
  !*** ./src/store/taskStore.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ taskStore; }\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n\nclass taskStore {\n    setTasks(tasks) {\n        this._tasks = tasks;\n    }\n    addTask(task) {\n        this._tasks.push(task);\n    }\n    removeTask(id) {\n        this._tasks = this._tasks.filter((task)=>task.id !== id);\n    }\n    completeTask(id) {\n        this._tasks = this._tasks.map((item)=>item.id == id ? {\n                ...item,\n                isChecked: !item.isChecked\n            } : item);\n    }\n    editTask(id, text) {\n        this._tasks = this._tasks.map((item)=>item.id == id ? {\n                ...item,\n                title: text\n            } : item);\n    }\n    setIsUpdate(bool) {\n        this._isUpdate = bool;\n    }\n    get IsUpdate() {\n        return this._isUpdate;\n    }\n    get tasks() {\n        return this._tasks;\n    }\n    constructor(){\n        this._tasks = [];\n        this._isUpdate = false;\n        this._page = 1;\n        this._totalCount = 0;\n        this._limit = 5;\n        (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeAutoObservable)(this);\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3RvcmUvdGFza1N0b3JlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzBDO0FBRTNCLE1BQU1DO0lBU3BCQyxTQUFTQyxLQUFLLEVBQUU7UUFDZixJQUFJLENBQUNDLE1BQU0sR0FBR0Q7SUFDZjtJQUVBRSxRQUFRQyxJQUFJLEVBQUU7UUFDYixJQUFJLENBQUNGLE1BQU0sQ0FBQ0csSUFBSSxDQUFDRDtJQUNsQjtJQUNBRSxXQUFXQyxFQUFVLEVBQUU7UUFDdEIsSUFBSSxDQUFDTCxNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNLENBQUNNLE1BQU0sQ0FBQ0osQ0FBQUEsT0FBUUEsS0FBS0csRUFBRSxLQUFLQTtJQUN0RDtJQUNBRSxhQUFhRixFQUFVLEVBQUU7UUFDeEIsSUFBSSxDQUFDTCxNQUFNLEdBQUcsSUFBSSxDQUFDQSxNQUFNLENBQUNRLEdBQUcsQ0FBQ0MsQ0FBQUEsT0FBUUEsS0FBS0osRUFBRSxJQUFJQSxLQUFLO2dCQUFFLEdBQUdJLElBQUk7Z0JBQUVDLFdBQVcsQ0FBQ0QsS0FBS0MsU0FBUztZQUFDLElBQUlEO0lBQ2pHO0lBQ0FFLFNBQVNOLEVBQVUsRUFBRU8sSUFBWSxFQUFFO1FBQ2xDLElBQUksQ0FBQ1osTUFBTSxHQUFHLElBQUksQ0FBQ0EsTUFBTSxDQUFDUSxHQUFHLENBQUNDLENBQUFBLE9BQVFBLEtBQUtKLEVBQUUsSUFBSUEsS0FBSztnQkFBRSxHQUFHSSxJQUFJO2dCQUFFSSxPQUFPRDtZQUFLLElBQUlIO0lBQ2xGO0lBQ0FLLFlBQVlDLElBQWEsRUFBRTtRQUMxQixJQUFJLENBQUNDLFNBQVMsR0FBR0Q7SUFDbEI7SUFDQSxJQUFJRSxXQUFXO1FBQ2QsT0FBTyxJQUFJLENBQUNELFNBQVM7SUFDdEI7SUFDQSxJQUFJakIsUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDQyxNQUFNO0lBQ25CO0lBM0JBa0IsYUFBYzthQUxkbEIsU0FBUyxFQUFFO2FBQ1hnQixZQUFZO2FBQ1pHLFFBQVE7YUFDUkMsY0FBYzthQUNkQyxTQUFTO1FBRVJ6Qix3REFBa0JBLENBQUMsSUFBSTtJQUN4QjtBQTJCRDtBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZS90YXNrU3RvcmUudHM/NTVkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUYXNrUHJvcHMgfSBmcm9tICdAL2ludGVyZmFjZS9pbnRlcmZhY2UnO1xuaW1wb3J0IHsgbWFrZUF1dG9PYnNlcnZhYmxlIH0gZnJvbSAnbW9ieCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHRhc2tTdG9yZSB7XG5cdF90YXNrcyA9IFtdXG5cdF9pc1VwZGF0ZSA9IGZhbHNlXG5cdF9wYWdlID0gMVxuXHRfdG90YWxDb3VudCA9IDBcblx0X2xpbWl0ID0gNVxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHRtYWtlQXV0b09ic2VydmFibGUodGhpcylcblx0fVxuXHRzZXRUYXNrcyh0YXNrcykge1xuXHRcdHRoaXMuX3Rhc2tzID0gdGFza3Ncblx0fVxuXG5cdGFkZFRhc2sodGFzaykge1xuXHRcdHRoaXMuX3Rhc2tzLnB1c2godGFzaylcblx0fVxuXHRyZW1vdmVUYXNrKGlkOiBudW1iZXIpIHtcblx0XHR0aGlzLl90YXNrcyA9IHRoaXMuX3Rhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suaWQgIT09IGlkKVxuXHR9XG5cdGNvbXBsZXRlVGFzayhpZDogbnVtYmVyKSB7XG5cdFx0dGhpcy5fdGFza3MgPSB0aGlzLl90YXNrcy5tYXAoaXRlbSA9PiBpdGVtLmlkID09IGlkID8geyAuLi5pdGVtLCBpc0NoZWNrZWQ6ICFpdGVtLmlzQ2hlY2tlZCB9IDogaXRlbSlcblx0fVxuXHRlZGl0VGFzayhpZDogbnVtYmVyLCB0ZXh0OiBzdHJpbmcpIHtcblx0XHR0aGlzLl90YXNrcyA9IHRoaXMuX3Rhc2tzLm1hcChpdGVtID0+IGl0ZW0uaWQgPT0gaWQgPyB7IC4uLml0ZW0sIHRpdGxlOiB0ZXh0IH0gOiBpdGVtKVxuXHR9XG5cdHNldElzVXBkYXRlKGJvb2w6IGJvb2xlYW4pIHtcblx0XHR0aGlzLl9pc1VwZGF0ZSA9IGJvb2xcblx0fVxuXHRnZXQgSXNVcGRhdGUoKSB7XG5cdFx0cmV0dXJuIHRoaXMuX2lzVXBkYXRlXG5cdH1cblx0Z2V0IHRhc2tzKCkge1xuXHRcdHJldHVybiB0aGlzLl90YXNrc1xuXHR9XG5cbn1cbmV4cG9ydCBpbnRlcmZhY2UgVGFza1N0b3JlIHtcblx0X3Rhc2tzOiBUYXNrUHJvcHNbXSxcblx0c2V0VGFzazogKHRhc2tzOiBUYXNrUHJvcHNbXSkgPT4gdm9pZCxcblx0YWRkVGFzazogKHRhc2s6IFRhc2tQcm9wcykgPT4gdm9pZCxcblx0cmVtb3ZlVGFzazogKGlkOiBudW1iZXIpID0+IHZvaWQsXG5cdGNvbXBsZXRlVGFzazogKGlkOiBudW1iZXIpID0+IHZvaWQsXG5cdHRhc2tzOiAoKSA9PiBUYXNrUHJvcHNbXVxufSJdLCJuYW1lcyI6WyJtYWtlQXV0b09ic2VydmFibGUiLCJ0YXNrU3RvcmUiLCJzZXRUYXNrcyIsInRhc2tzIiwiX3Rhc2tzIiwiYWRkVGFzayIsInRhc2siLCJwdXNoIiwicmVtb3ZlVGFzayIsImlkIiwiZmlsdGVyIiwiY29tcGxldGVUYXNrIiwibWFwIiwiaXRlbSIsImlzQ2hlY2tlZCIsImVkaXRUYXNrIiwidGV4dCIsInRpdGxlIiwic2V0SXNVcGRhdGUiLCJib29sIiwiX2lzVXBkYXRlIiwiSXNVcGRhdGUiLCJjb25zdHJ1Y3RvciIsIl9wYWdlIiwiX3RvdGFsQ291bnQiLCJfbGltaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/store/taskStore.ts\n"));

/***/ })

});